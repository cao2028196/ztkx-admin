"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_transition_group_1 = require("react-transition-group");
var classNames_1 = __importDefault(require("../../_util/classNames"));
var useStateWithPromise_1 = __importDefault(require("../../_util/hooks/useStateWithPromise"));
var IconDown_1 = __importDefault(require("../../../icon/react-icon-cjs/IconDown"));
var util_1 = require("../util");
var context_1 = __importDefault(require("../context"));
var indent_1 = __importDefault(require("../indent"));
var hotkey_1 = require("../hotkey");
var pick_1 = __importDefault(require("../../_util/pick"));
var globalInlineSubMenuIndex = 0;
var SubMenuInline = function (props) {
    var _a;
    var _key = props._key, children = props.children, style = props.style, className = props.className, title = props.title, level = props.level, forwardedRef = props.forwardedRef, selectable = props.selectable, rest = __rest(props, ["_key", "children", "style", "className", "title", "level", "forwardedRef", "selectable"]);
    var _b = (0, react_1.useContext)(context_1.default), menuId = _b.id, prefixCls = _b.prefixCls, levelIndent = _b.levelIndent, _c = _b.openKeys, openKeys = _c === void 0 ? [] : _c, _d = _b.selectedKeys, selectedKeys = _d === void 0 ? [] : _d, icons = _b.icons, onClickSubMenu = _b.onClickSubMenu, onClickMenuItem = _b.onClickMenuItem, collectInlineMenuKeys = _b.collectInlineMenuKeys;
    var baseClassName = prefixCls + "-inline";
    var isOpen = (openKeys === null || openKeys === void 0 ? void 0 : openKeys.indexOf(_key)) > -1;
    var isSelected = (selectable && selectedKeys.indexOf(props._key) > -1) ||
        (0, util_1.isChildrenSelected)(children, selectedKeys);
    var _e = __read((0, useStateWithPromise_1.default)(isOpen ? 'auto' : 0), 2), height = _e[0], setHeight = _e[1];
    var subMenuClickHandler = function (event) {
        onClickSubMenu(_key, level, 'inline');
        selectable && onClickMenuItem(_key, event);
    };
    var isActive = (0, hotkey_1.useHotkeyHandler)(_key, function (isActive, type) { return isActive && type === 'enter' && subMenuClickHandler(null); });
    // Unique ID of this instance
    var instanceId = (0, react_1.useMemo)(function () {
        var id = menuId + "-submenu-inline-" + globalInlineSubMenuIndex;
        globalInlineSubMenuIndex++;
        return id;
    }, []);
    (0, react_1.useEffect)(function () {
        collectInlineMenuKeys(props._key);
        return function () {
            collectInlineMenuKeys(props._key, true);
        };
    }, []);
    // Should omit these properties in Menu.Item
    var childrenList = (0, util_1.processChildren)(children, __assign(__assign({}, (0, pick_1.default)(rest, util_1.PROPS_NEED_TO_BE_PASSED_IN_SUBMENU)), { level: level + 1, selectable: selectable }));
    var header = (react_1.default.createElement("div", { "aria-expanded": isOpen, "aria-controls": instanceId, className: (0, classNames_1.default)(baseClassName + "-header", (_a = {},
            _a[prefixCls + "-active"] = isActive,
            _a[prefixCls + "-selected"] = isSelected,
            _a)), onClick: subMenuClickHandler },
        react_1.default.createElement(indent_1.default, { level: level, prefixCls: prefixCls, levelIndent: levelIndent }),
        react_1.default.createElement("span", null, title),
        react_1.default.createElement("span", { className: prefixCls + "-icon-suffix " + (isOpen ? 'is-open' : '') }, icons && icons.horizontalArrowDown ? icons.horizontalArrowDown : react_1.default.createElement(IconDown_1.default, null))));
    var content = (react_1.default.createElement("div", { id: instanceId, className: (0, classNames_1.default)(baseClassName + "-content"), style: { height: height } }, childrenList));
    return (react_1.default.createElement("div", { ref: forwardedRef, className: (0, classNames_1.default)(baseClassName, className), style: style },
        header,
        react_1.default.createElement(react_transition_group_1.CSSTransition, { in: isOpen, timeout: 200, classNames: baseClassName, unmountOnExit: false, onEnter: function (element) {
                setHeight(0).then(function () {
                    setHeight(element.scrollHeight);
                });
            }, onEntered: function () {
                setHeight('auto');
            }, onExit: function (element) {
                setHeight(element.scrollHeight).then(function () {
                    setHeight(0);
                });
            } }, content)));
};
exports.default = SubMenuInline;
