stages:
    - build
    - deploy

variables:
    GIT_DEPTH: 10

build:
    stage: build
    only:
        - develop
        - test
        - master
    tags:
        - docker
        - shell
        - develop
    script:
        - yarn install
        - yarn build:${CI_COMMIT_REF_NAME}
        - docker build -t tcr.kxsz.net/web/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME} .
        - docker push tcr.kxsz.net/web/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
    # after_script:
    #   - docker rmi $(docker images -f dangling=true -q)

build_release:
    stage: build
    only:
        - /^release-.*$/
    tags:
        - docker
        - shell
        - develop
    script:
        - yarn install
        - yarn build
        - docker build -t tcr.kxsz.net/web/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME} .
        - docker push tcr.kxsz.net/web/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}

deploy_develop:
    stage: deploy
    only:
        - develop
    tags:
        - docker
        - shell
        - develop
    script:
        - mkdir -p /opt/${CI_PROJECT_NAME}/logs && mkdir -p /opt/${CI_PROJECT_NAME}/config
        - cp docker-compose*.yml /opt/${CI_PROJECT_NAME}/
        - cd /opt/${CI_PROJECT_NAME}
        - docker pull tcr.kxsz.net/web/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
        - docker-compose down
        - IMAGETAG=${CI_COMMIT_REF_NAME} docker-compose up -d

deploy_test:
    stage: deploy
    only:
        - test
    tags:
        - deploy
        - qcloud
        - test
    script:
        - mkdir -p /opt/${CI_PROJECT_NAME}/logs && mkdir -p /opt/${CI_PROJECT_NAME}/config
        - cp docker-compose*.yml /opt/${CI_PROJECT_NAME}/
        - cd /opt/${CI_PROJECT_NAME}
        - docker pull tcr.kxsz.net/web/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
        - docker-compose down
        - IMAGETAG=${CI_COMMIT_REF_NAME} docker-compose up -d
#deploy_publish:
#  stage: deploy
#  only:
#    - test
#  tags:
#    - shell
#    - qcloud
#    - kubectl
#  script:
#    - kubectl -n test delete configmap ${CI_PROJECT_NAME}
#    - kubectl -n test create configmap ${CI_PROJECT_NAME} --from-file=config/test.json
#    - kubectl -n test set env deployment --env="LAST_MANUAL_RESTART=$(date +%s)" ${CI_PROJECT_NAME}
#
